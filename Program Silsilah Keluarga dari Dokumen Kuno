import java.util.*;

public class FamilyTree { private static int cari(int[] parent, int x) { if (parent[x] == x) { return x; } return parent[x] = cari(parent, parent[x]); }
private static void union(int[] parent, int x, int y) {
    int root1 = cari(parent, x);
    int root2 = cari(parent, y);
    if (root1 != root2) {
        parent[root2] = root1;
    }
}
public static void main(String[] args) {
    Scanner Input = new Scanner(System.in);
    int M = Input.nextInt();
    int N = Input.nextInt();
    Input.nextLine();
    Map<String, Integer> pencarianKeluarga = new HashMap<>();
    int index = 0;
    int[] parent = new int[M];
    for (int i = 0; i < M; i++) {
        parent[i] = i;
}
    for (int i = 0; i < N; i++) {
        String[] relasi = Input.nextLine().split(" ");
        String nama1 = relasi[0];
        String nama2 = relasi[2];
        if (!pencarianKeluarga.containsKey(nama1)) {
            pencarianKeluarga.put(nama1, index++);
        }
        if (!pencarianKeluarga.containsKey(nama2)) {
            pencarianKeluarga.put(nama2, index++);
        }
int keluarga1 = pencarianKeluarga.get(nama1);
        int keluarga2 = pencarianKeluarga.get(nama2);
        union(parent, keluarga1, keluarga2);
    }
    Set<Integer> TotalKeluarga = new HashSet<>();
    for (int i = 0; i < M; i++) {
        TotalKeluarga.add(cari(parent, i));
    }
    System.out.println(TotalKeluarga.size());
}
}
